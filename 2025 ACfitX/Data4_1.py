'''
Author: Jinn-Liang Liu, Jan 22, 2025.
Data for ActGDH4_1, 4_2.py
'''
import warnings
import numpy as np

from LSfit import AF_idx

class DataFit():
  def __init__(self, salt):
    if salt == 'NaF':
      self.C1m = np.array([0.006799,0.01302,0.04344,0.08573,0.1001,0.155,0.2245,0.275,0.3148,0.3679,0.4033,0.495,0.5684,0.6334,0.6999,0.7527,0.8798])
      self.gamma = np.array([0.922,0.888,0.811,0.759,0.748,0.715,0.689,0.672,0.662,0.65,0.644,0.629,0.618,0.611,0.604,0.599,0.588])
    elif salt == 'NaCl':
      self.C1m = np.array(  [0.001,0.002,0.005,0.007, 0.01,0.015, 0.02, 0.03, 0.05, 0.07,  0.1, 0.15,  0.2,  0.3,  0.4,  0.5,  0.7,    1,  1.5,    2,    3,   4])
      self.gamma = np.array([0.965,0.952,0.928,0.916,0.903,0.885,0.872,0.851,0.822,0.801,0.779,0.754,0.734,0.709,0.693,0.681,0.667,0.657,0.657,0.668,0.714,0.783])
    elif salt == 'NaBr':
      self.C1m = np.array([0.03916,0.06019,0.09881,0.1469,0.2089,0.2468,0.2865,0.3471,0.4094,0.5011,0.5891,0.6543,0.7387,0.8449,1.1425,1.6044,1.9175,2.6891,3.1877,4.0707,4.6237])
      self.gamma = np.array([0.8423,0.812,0.7784,0.7549,0.7305,0.7225,0.716,0.7208,0.7126,0.7046,0.6962,0.6923,0.6891,0.6864,0.6904,0.7158,0.7433,0.807,0.8565,0.9709,1.0486])
    else:
      warnings.warn('Warning: No data for this salt.')

class DataPredict():
  def __init__(self, salt):
    if salt == 'NaF':
      #--- 20%
      C1mX0 = np.array([0.01393,0.02495,0.05895,0.09415,0.1001,0.1804,0.2215,0.2409,0.275,0.3076,0.3761])
      g_dataX0 = np.array([0.868,0.832,0.766,0.729,0.723,0.677,0.656,0.647,0.634,0.629,0.606])
      #--- 40%
      C1mX1 = np.array([0.008278,0.01205,0.01722,0.02393,0.03855,0.04647,0.0567,0.07006,0.0801,0.09363,0.1001,0.1054,0.122])
      g_dataX1 = np.array([0.861,0.838,0.81,0.78,0.74,0.724,0.708,0.691,0.679,0.664,0.659,0.655,0.642])
      #--- 60%
      C1mX2 = np.array([0.004008,0.006469,0.008278,0.01,0.0115,0.01207,0.01524,0.01749,0.021,0.0219,0.025,0.02536,0.03001,0.03268,0.03996])
      g_dataX2 = np.array([0.874,0.84,0.822,0.808,0.797,0.789,0.774,0.762,0.745,0.737,0.73,0.732,0.714,0.709,0.69])
      #--- 80%
      C1mX3 = np.array([0.000859,0.00169,0.002886,0.003936,0.005,0.0065,0.007001,0.007896,0.009542,0.01057,0.012,0.01305])
      g_dataX3 = np.array([0.923,0.887,0.856,0.835,0.816,0.792,0.785,0.772,0.753,0.745,0.734,0.721])
      #--- 100%
      C1mX4 = np.array([0.000286,0.000585,0.000883,0.002982,0.003411,0.003841,0.004902,0.005964,0.006321,0.006679])
      g_dataX4 = np.array([0.965,0.875,0.862,0.677,0.649,0.625,0.598,0.57,0.547,0.542])

      self.mixNo = 5

    elif salt == 'NaCl':
      #--- 20%
      C1mX0 = np.array([0.001,0.002,0.005,0.007,0.01,0.015,0.02,0.03,0.05,0.07,0.1,0.15,0.2,0.3,0.4,0.5,0.7,1,1.5,2,3,4])
      g_dataX0 = np.array([0.958,0.942,0.913,0.899,0.882,0.861,0.844,0.818,0.781,0.755,0.726,0.692,0.669,0.637,0.616,0.602,0.583,0.571,0.569,0.579,0.619,0.677])
      #--- 40%
      C1mX1 = np.array([0.001,0.002,0.005,0.007,0.01,0.015,0.02,0.03,0.05,0.07,0.1,0.15,0.2,0.3,0.4,0.5,0.7,1,1.5,2])
      g_dataX1 = np.array([0.949,0.93,0.896,0.88,0.861,0.836,0.817,0.788,0.748,0.72,0.69,0.656,0.632,0.6,0.58,0.566,0.549,0.537,0.534,0.543])
      #--- 60%
      C1mX2 = np.array([0.001,0.002,0.005,0.007,0.01,0.015,0.02,0.03,0.05,0.07,0.1,0.15,0.2,0.3,0.4,0.5,0.7,1])
      g_dataX2 = np.array([0.936,0.912,0.868,0.847,0.823,0.793,0.769,0.732,0.683,0.649,0.612,0.571,0.543,0.508,0.486,0.472,0.458,0.454])
      #--- 80%
      C1mX3 = np.array([0.001,0.002,0.005,0.007,0.01,0.015,0.02,0.03,0.05,0.07,0.1,0.15,0.2,0.3,0.4,0.5])
      g_dataX3 = np.array([0.914,0.882,0.824,0.798,0.767,0.728,0.699,0.654,0.594,0.554,0.513,0.468,0.439,0.405,0.387,0.378])
      #--- 100% No data.
      C1mX4 = np.array([0,0])
      g_dataX4 = np.array([0,0])

      self.mixNo = 4

    elif salt == 'NaBr':
      #--- 20%
      C1mX0 = np.array([0.00925,0.03593,0.06545,0.09519,0.1274,0.1629,0.1829,0.2297,0.3196,0.3951,0.4648,0.6007,0.8087,1.1601,1.4442,1.8381,2.4674,3.0318])
      g_dataX0 = np.array([0.8975,0.8204,0.7858,0.758,0.738,0.7234,0.7185,0.7032,0.686,0.6781,0.6683,0.657,0.6478,0.6529,0.6612,0.6795,0.7186,0.7562])
      #--- 40%
      C1mX1 = np.array([0.01261,0.03722,0.06562,0.08985,0.1036,0.1314,0.1572,0.1698,0.1894,0.2509,0.3759,0.8245,1.0926,1.3838,1.8882,2.3029,2.6978,2.9879])
      g_dataX1 = np.array([0.8473,0.7791,0.7315,0.6948,0.6839,0.6679,0.6511,0.6478,0.6401,0.6211,0.5885,0.5577,0.5791,0.581,0.6009,0.6271,0.6466,0.6848])
      #--- 60%
      C1mX2 = np.array([0.01191,0.03642,0.0644,0.08765,0.1094,0.1306,0.1522,0.1621,0.1713,0.1993,0.2632,0.6039,1.0491,1.2994,1.6943,2.1481,2.535,3.0191])
      g_dataX2 = np.array([0.8299,0.7481,0.6936,0.6719,0.6565,0.6401,0.6282,0.6253,0.62,0.6107,0.5886,0.5566,0.5377,0.5441,0.5588,0.589,0.628,0.6699])
      #--- 80%
      C1mX3 = np.array([0.00806,0.03637,0.06649,0.09696,0.1107,0.1362,0.1596,0.1813,0.198,0.4324,0.6268,1.2134,1.4151,1.6983,1.8498,2.0334,2.2919,2.5436])
      g_dataX3 = np.array([0.807,0.665,0.6069,0.5727,0.5593,0.5438,0.5297,0.518,0.5107,0.4454,0.4319,0.4567,0.4638,0.4769,0.4873,0.5031,0.5287,0.547])
      #--- 100%
      C1mX4 = np.array([0.01024,0.04271,0.07211,0.0826,0.1092,0.1214,0.141,0.15,0.1685,0.1846,0.2088,0.4246,0.5517,0.8492,1.03,1.1315,1.3479,1.5131])
      g_dataX4 = np.array([0.7175,0.5661,0.5105,0.497,0.4721,0.4635,0.4511,0.4461,0.436,0.4186,0.4079,0.3689,0.3621,0.3652,0.3701,0.375,0.3914,0.4082])

      self.mixNo = 5

    else:
      warnings.warn('Warning: No data for this salt.')

    self.C1mX = (C1mX0, C1mX1, C1mX2, C1mX3, C1mX4)
    self.C1mX0_Mix1 = C1mX0 / 2  # for mix-salt 1: NaCl+NaBr
    self.C1mX0_Mix2 = C1mX0 / 3  # for mix-salt 2: NaCl+NaBr+NaF
    self.g_dataX = (g_dataX0, g_dataX1, g_dataX2, g_dataX3, g_dataX4)
